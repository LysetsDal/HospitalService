syntax = "proto3";

package HospitalService;

option go_package = "HospitalService/proto";

// import "google/protobuf/empty.proto";

/*
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. \
--go-grpc_opt=paths=source_relative HospitalService/HospitalService.proto
*/

// PEER-2-PEER FOR CLIENTS 
service Client_ {
    rpc ping (ClientConnect) returns (ClientResponse) {}
    rpc SendMessage (Message) returns (EmptyMessage) {}
}

// HOSPITAL SERVER INTERFACE
service Hospital_ {
    rpc NewConnection (ClientConnect) returns (ClientResponse) {}
    rpc CloseConnection (ClientDisconnect) returns (ServerResponse) {}
}

message Message {
    int32 client_id = 1;
    string content = 2;
}

message ClientConnect {
    int32 client_id = 1;
}

message ClientResponse {
    int32 client_id = 1;
}


message ClientDisconnect {
    int32 client_id = 1;
    string disconnect_msg = 2;
}

message Secret {
    int32 client_id = 1;
    int32 shares_count = 2;
}

message Share {
    int32 client_id = 1;
    int32 share = 2;
}

message ServerResponse {
    int32 client_id = 1;
    string server_msg = 2;
}

message EmptyMessage {
    string response = 1;
}